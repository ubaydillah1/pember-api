// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  Booked
  Cancelled
}

model Ticket {
  id         Int          @id @default(autoincrement())
  userId     String
  movieTitle String
  createdAt  DateTime     @default(now())
  showTime   String
  price      Float
  seats      TicketSeat[]
  TicketLogs TicketLogs[]
}

model TicketLogs {
  id         Int      @id @default(autoincrement())
  status     Status   @default(Booked)
  movieTitle String
  showTime   String
  seats      String
  price      Float
  createdAt  DateTime @default(now())
  Ticket     Ticket?  @relation(fields: [ticketId], references: [id])
  ticketId   Int?
}

model Seat {
  id          Int          @id @default(autoincrement())
  seatLabel   String       @unique
  ticketSeats TicketSeat[]
}

model TicketSeat {
  id       Int    @id @default(autoincrement())
  ticket   Ticket @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  ticketId Int
  seat     Seat   @relation(fields: [seatId], references: [id])
  seatId   Int
}

model Feedback {
  id          Int      @id @default(autoincrement())
  userId      String
  title       String
  desctiption String
  location    String
  image       String
  rating      String
  created_at  DateTime @default(now())
}
